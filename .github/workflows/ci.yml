name: CI Pipeline - Auth Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Show Java and Maven Versions
        run: |
          java -version
          mvn -version

      - name: Run Unit Tests
        working-directory: auth-service
        run: mvn clean test -Djunit.jupiter.include.tags=unit

      - name: Run Integration Tests
        working-directory: auth-service
        run: mvn test -Djunit.jupiter.include.tags=integration

# voltar quando o repo estiver publico
      # - name: Generate JaCoCo Coverage Report
      #   working-directory: auth-service
      #   run: mvn jacoco:report

      # - name: SonarQube Analysis
      #   working-directory: auth-service
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #   run: |
      #     mvn sonar:sonar \
      #       -Dsonar.projectKey=auth-service \
      #       -Dsonar.host.url=$SONAR_HOST_URL \
      #       -Dsonar.login=$SONAR_TOKEN \
      #       -Dsonar.java.binaries=target/classes \
      #       -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Build Artifact
        working-directory: auth-service
        run: mvn clean package -DskipTests

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: auth-service-artifact
          path: auth-service/target/*.jar

  deploy:
    name: Deploy to AWS Elastic Beanstalk
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: auth-service-artifact
          path: artifact

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        env:
          EB_APP_NAME: ${{ secrets.EB_APP_NAME }}
          EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}      
          S3_BUCKET: ${{ secrets.S3_BUCKET }}        
          VERSION_LABEL: "v-${{ github.run_number }}"
        run: |
          JAR_FILE=$(ls artifact/*.jar | head -n 1)
          echo "Deploying $JAR_FILE"
          aws s3 cp "$JAR_FILE" s3://$S3_BUCKET/$(basename "$JAR_FILE")
          aws elasticbeanstalk create-application-version \
            --application-name $EB_APP_NAME \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=$(basename "$JAR_FILE")
          aws elasticbeanstalk update-environment \
            --environment-name $EB_ENV_NAME \
            --version-label $VERSION_LABEL
